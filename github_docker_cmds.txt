GitHub commands:
# 1. Initialize a new Git repository in your project folder
git init

# 2. Stage all your files to be committed
git add .

# 3. Commit your files with a message
git commit -m "Initial commit"

# 4. Rename the default branch to 'main' (modern standard)
git branch -M main

# 5. Link your local repository to the one you created on GitHub
#    (Replace the URL with your own)
git remote add origin https://github.com/your-username/your-project-name.git

# 6. Push your code to GitHub
git push -u origin main


Dockerfile:
# --- Stage 1: Build the application using Maven ---
FROM maven:3.8-openjdk-17 AS build
WORKDIR /app
COPY pom.xml .
COPY src ./src
RUN mvn clean package -DskipTests

# --- Stage 2: Create the final image with Tomcat ---
FROM tomcat:9.0-jdk17-temurin
# Remove the default ROOT webapp
RUN rm -rf /usr/local/tomcat/webapps/ROOT
# Copy the .war file from the build stage to Tomcat's webapps folder
# Make sure your finalName in pom.xml is Food-system-xyz.war
COPY --from=build /app/target/Food-system-xyz.war /usr/local/tomcat/webapps/ROOT.war

# Expose port 8080
EXPOSE 8080

# Start Tomcat
CMD ["catalina.sh", "run"]


Docker cmds:
# 1. Log in to your Docker Hub account
#    (It will prompt for your username and password)
docker login

# 2. Build the Docker image
#    (Replace 'your-dockerhub-username' and 'your-image-name')
#    The '.' at the end is important! It specifies the current directory.
docker build -t tussharkoppula/your-image-name:latest .

# 3. Push the image to Docker Hub
docker push tussharkoppula/your-image-name:latest